{"version":3,"sources":["../node_modules/lodash/_isIterateeCall.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_equalObjects.js","components/uielements/styles/editor.style.js","components/uielements/editor.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalArrays.js"],"names":["eq","__webpack_require__","isArrayLike","isIndex","isObject","module","exports","value","index","object","type","length","array","predicate","map","result","Array","size","forEach","key","Stack","equalArrays","equalByTag","equalObjects","getTag","isArray","isBuffer","isTypedArray","COMPARE_PARTIAL_FLAG","argsTag","arrayTag","objectTag","hasOwnProperty","Object","prototype","other","bitmask","customizer","equalFunc","stack","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","call","othIsWrapped","objUnwrapped","othUnwrapped","Symbol","Uint8Array","mapToArray","setToArray","COMPARE_UNORDERED_FLAG","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","undefined","symbolValueOf","valueOf","tag","byteLength","byteOffset","buffer","name","message","convert","isPartial","stacked","get","set","getAllKeys","objProps","objLength","skipCtor","objValue","othValue","compared","objCtor","constructor","othCtor","QuillEditor","styled","div","_templateObject","props","palette","font","WithDirection","Editor","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","handleChange","bind","assertThisInitialized","state","quillModules","toolbar","container","header","list","indent","setState","options","theme","formats","placeholder","onChange","modules","react_default","a","createElement","editor_style","lib_default","Component","baseIsEqual","baseIsEqualDeep","isObjectLike","SetCache","arraySome","cacheHas","arrLength","othLength","seen","arrValue","othIndex","push"],"mappings":"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","file":"static/js/forms-editor.7bca7f47.chunk.js","sourcesContent":["var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\n\n\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n\n  var type = typeof index;\n\n  if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n    return eq(object[index], value);\n  }\n\n  return false;\n}\n\nmodule.exports = isIterateeCall;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","import styled from 'styled-components';\nimport { palette, font } from 'styled-theme';\nimport WithDirection from '../../../settings/withDirection';\n\nconst QuillEditor = styled.div`\n  .ql-editor {\n    min-height: 215px;\n    text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\n  }\n\n  .ql-toolbar.ql-snow,\n  .ql-container.ql-snow {\n    border: 1px solid ${palette('border', 0)};\n    text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\n\n    .ql-formats {\n      margin: ${props => (props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0')};\n    }\n\n    .ql-picker-label {\n      padding: ${props =>\n        props['data-rtl'] === 'rtl' ? '0 8px 0 2px' : '0 2px 0 8px'};\n\n      &:not(.ql-color-picker):not(.ql-icon-picker) {\n        svg {\n          right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\n          left: ${props => (props['data-rtl'] === 'rtl' ? '0' : 'inherit')};\n        }\n      }\n    }\n  }\n\n  .ql-container {\n    font-family: ${font('primary', 0)};\n    min-height: 220px;\n  }\n\n  .ql-editor p,\n  .ql-editor ol,\n  .ql-editor ul,\n  .ql-editor pre,\n  .ql-editor blockquote,\n  .ql-editor h1,\n  .ql-editor h2,\n  .ql-editor h3,\n  .ql-editor h4,\n  .ql-editor h5,\n  .ql-editor h6 {\n    color: ${palette('text', 0)};\n  }\n\n  .ql-snow.ql-toolbar button:hover,\n  .ql-snow .ql-toolbar button:hover,\n  .ql-snow.ql-toolbar button:focus,\n  .ql-snow .ql-toolbar button:focus,\n  .ql-snow.ql-toolbar button.ql-active,\n  .ql-snow .ql-toolbar button.ql-active,\n  .ql-snow.ql-toolbar .ql-picker-label:hover,\n  .ql-snow .ql-toolbar .ql-picker-label:hover,\n  .ql-snow.ql-toolbar .ql-picker-label.ql-active,\n  .ql-snow .ql-toolbar .ql-picker-label.ql-active,\n  .ql-snow.ql-toolbar .ql-picker-item:hover,\n  .ql-snow .ql-toolbar .ql-picker-item:hover,\n  .ql-snow.ql-toolbar .ql-picker-item.ql-selected,\n  .ql-snow .ql-toolbar .ql-picker-item.ql-selected {\n    color: ${palette('primary', 0)};\n  }\n  .ql-snow.ql-toolbar button:hover .ql-fill,\n  .ql-snow .ql-toolbar button:hover .ql-fill,\n  .ql-snow.ql-toolbar button:focus .ql-fill,\n  .ql-snow .ql-toolbar button:focus .ql-fill,\n  .ql-snow.ql-toolbar button.ql-active .ql-fill,\n  .ql-snow .ql-toolbar button.ql-active .ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-label:hover .ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-label:hover .ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-item:hover .ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-item:hover .ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-fill,\n  .ql-snow.ql-toolbar button:hover .ql-stroke.ql-fill,\n  .ql-snow .ql-toolbar button:hover .ql-stroke.ql-fill,\n  .ql-snow.ql-toolbar button:focus .ql-stroke.ql-fill,\n  .ql-snow .ql-toolbar button:focus .ql-stroke.ql-fill,\n  .ql-snow.ql-toolbar button.ql-active .ql-stroke.ql-fill,\n  .ql-snow .ql-toolbar button.ql-active .ql-stroke.ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,\n  .ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,\n  .ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill {\n    fill: ${palette('primary', 0)};\n  }\n  .ql-snow.ql-toolbar button:hover .ql-stroke,\n  .ql-snow .ql-toolbar button:hover .ql-stroke,\n  .ql-snow.ql-toolbar button:focus .ql-stroke,\n  .ql-snow .ql-toolbar button:focus .ql-stroke,\n  .ql-snow.ql-toolbar button.ql-active .ql-stroke,\n  .ql-snow .ql-toolbar button.ql-active .ql-stroke,\n  .ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke,\n  .ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke,\n  .ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke,\n  .ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke,\n  .ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke,\n  .ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke,\n  .ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke,\n  .ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke,\n  .ql-snow.ql-toolbar button:hover .ql-stroke-miter,\n  .ql-snow .ql-toolbar button:hover .ql-stroke-miter,\n  .ql-snow.ql-toolbar button:focus .ql-stroke-miter,\n  .ql-snow .ql-toolbar button:focus .ql-stroke-miter,\n  .ql-snow.ql-toolbar button.ql-active .ql-stroke-miter,\n  .ql-snow .ql-toolbar button.ql-active .ql-stroke-miter,\n  .ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke-miter,\n  .ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke-miter,\n  .ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter,\n  .ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter,\n  .ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke-miter,\n  .ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke-miter,\n  .ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter,\n  .ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter {\n    stroke: ${palette('primary', 0)};\n  }\n\n  .ql-snow a {\n    color: ${palette('primary', 0)};\n  }\n`;\n\nexport default WithDirection(QuillEditor);\n","import React, { Component } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport 'react-quill/dist/quill.core.css';\nimport QuillEditor from './styles/editor.style';\n\nexport default class Editor extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = { value: '' };\n    this.quillModules = {\n      toolbar: {\n        container: [\n          [{ header: [1, 2, false] }, { font: [] }],\n          ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n          [\n            { list: 'ordered' },\n            { list: 'bullet' },\n            { indent: '-1' },\n            { indent: '+1' },\n          ],\n          ['link', 'image', 'video'],\n          ['clean'],\n        ],\n      },\n    };\n  }\n\n  handleChange(value) {\n    this.setState({ value });\n  }\n\n  render() {\n    const options = {\n      theme: 'snow',\n      formats: Editor.formats,\n      placeholder: 'Write Something',\n      value: this.state.value,\n      onChange: this.handleChange,\n      modules: this.quillModules,\n    };\n    return (\n      <QuillEditor>\n        <ReactQuill {...options} />\n      </QuillEditor>\n    );\n  }\n}\n","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;"],"sourceRoot":""}