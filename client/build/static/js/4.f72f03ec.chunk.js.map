{"version":3,"sources":["../node_modules/chart.js/src/helpers/index.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/find.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/elements/index.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_createFind.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/chart.js/src/chart.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/chartjs-color/node_modules/color-convert/index.js","../node_modules/chartjs-color/node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["module","exports","__webpack_require__","easing","canvas","options","helpers","_set","scope","values","merge","this","baseIsEqual","value","other","set","index","result","Array","size","forEach","baseForOwn","baseEach","createBaseEach","find","createFind","process","d","__webpack_exports__","Doughnut","Pie","Line","Bar","HorizontalBar","Radar","Polar","Bubble","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","args","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","undefined","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","type","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","label","console","error","_this2","a","configMerge","currentDatasets","config","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","object","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","_this16","_ref7","_React$Component9","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","defaults","color","Element","configuration","extend","initialize","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","ilen","actual","origin","c0","c1","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","layouts","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","scale","updateScaleDefaults","additions","addScalesToLayout","chart","each","scales","fullWidth","weight","addBox","Arc","Point","Rectangle","isArrayLike","eachFunc","fromRight","collection","iteratee","iterable","baseIteratee","findIndexFunc","predicate","fromIndex","filterByPosition","array","where","v","sortByWeight","reverse","_tmpIndex_","sort","b","v0","v1","item","boxes","push","removeBox","layoutItem","configure","prop","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","Math","max","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","Ticks","labelsFromTicks","ticks","labels","getLineValue","offsetGridLines","lineValue","getPixelForTick","computeTextSize","context","tick","font","isArray","longestText","measureText","parseFontOptions","valueOrDefault","globalDefaults","global","fontSize","defaultFontSize","style","fontStyle","defaultFontStyle","family","fontFamily","defaultFontFamily","fontString","parseLineHeight","toLineHeight","lineHeight","offset","gridLines","lineWidth","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","borderDash","borderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","callback","formatters","minor","major","paddingLeft","paddingTop","paddingRight","paddingBottom","getTicks","_ticks","mergeTicksOptions","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","noop","tickOpts","userCallback","ctx","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","cos","sin","opts","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","min","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","isNullOrUndef","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","round","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","floor","draw","optionMajorTicks","isRotated","tickFontColor","fontColor","defaultFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","zeroLineIndex","valueAtIndexOrDefault","textAlign","textBaseline","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","save","strokeStyle","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","rotate","fillStyle","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","PI","linear","tickValue","delta","abs","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","pow","uid","toString","isObject","defaultValue","fn","thisArg","loopable","len","arrayEquals","a0","a1","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","getValueOrDefault","getValueAtIndexOrDefault","Chart","Animation","animationService","elements","Interaction","platform","Scale","scaleService","Tooltip","register","window","Legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","convert","string","Color","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","degrees","mixinColor","p","w1","w2","toJSON","slice","spaces","maxes","getValues","space","charAt","capped","chans","sname","svalues","currentStep","numSteps","onAnimationProgress","onAnimationComplete","defineProperty","get","animation","duration","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","count","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","isDatasetVisible","getDatasetMeta","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","datasetIndex","_index","modes","single","_datasetIndex","x-axis","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_plugins","_cacheId","plugin","unregister","idx","clear","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","_invalidate","tooltips","enabled","custom","mode","backgroundColor","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","borderColor","borderWidth","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","_options","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","el","pos","eventPosition","nearestElement","distanceBetweenPoints","tp","mergeOpacity","colorString","opacity","pushOrConcat","base","toPush","splitNewlines","str","String","split","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getBeforeAfterBodyLines","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","_data","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","filter","itemSort","_chart","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","line","getTooltipSize","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","radius","quadraticCurveTo","closePath","fill","hasTooltipContent","handleEvent","getElementsAtEventForMode","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","animationDuration","defaultColor","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","clearRect","roundedRect","arcTo","rect","drawPoint","edgeLength","xOffset","yOffset","isNaN","arc","SQRT2","leftX","topY","sideSize","drawImage","clipArea","area","clip","unclipArea","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","matches","match","resolve","inputs","parseMaxStyle","styleValue","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","slen","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","arg","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","inLabelRange","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","borderCapStyle","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","xRange","hitRadius","pointStyle","hoverBorderWidth","isVertical","bar","getBarBounds","halfWidth","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","_addEventListener","listener","_removeEventListener","createEvent","nativeEvent","addResizeListener","expando","resizer","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","injectCSS","getElementById","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","positionIsHorizontal","types","instances","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","newOptions","updateConfig","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","res","resyncElements","removeHoverStyle","$previousStyle","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","stepSize","fixedStepSize","generationOptions","dataRange","factor","spacing","niceRange","ceil","niceMin","niceMax","numSpaces","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","_fit","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","categoryPercentage","barPercentage","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","horizontalBar","dataPoint","bubble","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","elementOpts","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","halfBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","PolarArea","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","setter","initializer","accumulator"],"mappings":"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","file":"static/js/4.f72f03ec.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","'use strict';\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = typeof target;\n\n    if (type === typeof origin) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n  // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n  // use the new chart options to grab the correct scale\n  constructors: {},\n  // Use a registration function so that we can move to an ES6 map when we no longer need to support\n  // old browsers\n  // Scale config defaults\n  defaults: {},\n  registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n    this.constructors[type] = scaleConstructor;\n    this.defaults[type] = helpers.clone(scaleDefaults);\n  },\n  getScaleConstructor: function getScaleConstructor(type) {\n    return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n  },\n  getScaleDefaults: function getScaleDefaults(type) {\n    // Return the scale defaults merged with the global settings so that we always use the latest ones\n    return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n  },\n  updateScaleDefaults: function updateScaleDefaults(type, additions) {\n    var me = this;\n\n    if (me.defaults.hasOwnProperty(type)) {\n      me.defaults[type] = helpers.extend(me.defaults[type], additions);\n    }\n  },\n  addScalesToLayout: function addScalesToLayout(chart) {\n    // Adds each scale to the chart.boxes array to be sized accordingly\n    helpers.each(chart.scales, function (scale) {\n      // Set ILayoutItem parameters for backwards compatibility\n      scale.fullWidth = scale.options.fullWidth;\n      scale.position = scale.options.position;\n      scale.weight = scale.options.weight;\n      layouts.addBox(chart, scale);\n    });\n  }\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n  return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n  var valueOrDefault = helpers.valueOrDefault;\n  var globalDefaults = defaults.global;\n  var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n  var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n  var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n  return {\n    size: size,\n    style: style,\n    family: family,\n    font: helpers.fontString(size, style, family)\n  };\n}\n\nfunction parseLineHeight(options) {\n  return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n  /**\n   * Get the padding needed for the scale\n   * @method getPadding\n   * @private\n   * @returns {Padding} the necessary padding\n   */\n  getPadding: function getPadding() {\n    var me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  },\n\n  /**\n   * Returns the scale tick objects ({label, major})\n   * @since 2.7\n   */\n  getTicks: function getTicks() {\n    return this._ticks;\n  },\n  // These methods are ordered by lifecyle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n  mergeTicksOptions: function mergeTicksOptions() {\n    var ticks = this.options.ticks;\n\n    if (ticks.minor === false) {\n      ticks.minor = {\n        display: false\n      };\n    }\n\n    if (ticks.major === false) {\n      ticks.major = {\n        display: false\n      };\n    }\n\n    for (var key in ticks) {\n      if (key !== 'major' && key !== 'minor') {\n        if (typeof ticks.minor[key] === 'undefined') {\n          ticks.minor[key] = ticks[key];\n        }\n\n        if (typeof ticks.major[key] === 'undefined') {\n          ticks.major[key] = ticks[key];\n        }\n      }\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    helpers.callback(this.options.beforeUpdate, [this]);\n  },\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this;\n    var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = helpers.extend({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Data min/max\n\n    me.beforeDataLimits();\n    me.determineDataLimits();\n    me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n    // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n    // and must not be accessed directly from outside this class. `this.ticks` being\n    // around for long time and not marked as private, we can't change its structure\n    // without unexpected breaking changes. If you need to access the scale ticks,\n    // use scale.getTicks() instead.\n\n    me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n    // we still support no return (`this.ticks` internally set by calling this method).\n\n    ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n    // COMPAT, we still support no return (`this.ticks` internally changed by calling\n    // this method and supposed to contain only string values).\n\n    labels = me.convertTicksToLabels(ticks) || me.ticks;\n    me.afterTickToLabelConversion();\n    me.ticks = labels; // BACKWARD COMPATIBILITY\n    // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n    // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      tick = ticks[i];\n\n      if (!tick) {\n        ticks.push(tick = {\n          label: label,\n          major: false\n        });\n      } else {\n        tick.label = label;\n      }\n    }\n\n    me._ticks = ticks; // Tick Rotation\n\n    me.beforeCalculateTickRotation();\n    me.calculateTickRotation();\n    me.afterCalculateTickRotation(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: function afterUpdate() {\n    helpers.callback(this.options.afterUpdate, [this]);\n  },\n  //\n  beforeSetDimensions: function beforeSetDimensions() {\n    helpers.callback(this.options.beforeSetDimensions, [this]);\n  },\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  },\n  afterSetDimensions: function afterSetDimensions() {\n    helpers.callback(this.options.afterSetDimensions, [this]);\n  },\n  // Data limits\n  beforeDataLimits: function beforeDataLimits() {\n    helpers.callback(this.options.beforeDataLimits, [this]);\n  },\n  determineDataLimits: helpers.noop,\n  afterDataLimits: function afterDataLimits() {\n    helpers.callback(this.options.afterDataLimits, [this]);\n  },\n  //\n  beforeBuildTicks: function beforeBuildTicks() {\n    helpers.callback(this.options.beforeBuildTicks, [this]);\n  },\n  buildTicks: helpers.noop,\n  afterBuildTicks: function afterBuildTicks() {\n    helpers.callback(this.options.afterBuildTicks, [this]);\n  },\n  beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n    helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n  },\n  convertTicksToLabels: function convertTicksToLabels() {\n    var me = this; // Convert ticks to strings\n\n    var tickOpts = me.options.ticks;\n    me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n  },\n  afterTickToLabelConversion: function afterTickToLabelConversion() {\n    helpers.callback(this.options.afterTickToLabelConversion, [this]);\n  },\n  //\n  beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n    helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n  },\n  calculateTickRotation: function calculateTickRotation() {\n    var me = this;\n    var context = me.ctx;\n    var tickOpts = me.options.ticks;\n    var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n    // between x offsets between 0 and 1.\n\n    var tickFont = parseFontOptions(tickOpts);\n    context.font = tickFont.font;\n    var labelRotation = tickOpts.minRotation || 0;\n\n    if (labels.length && me.options.display && me.isHorizontal()) {\n      var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n      var labelWidth = originalLabelWidth;\n      var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n      var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n      while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n        var angleRadians = helpers.toRadians(labelRotation);\n        cosRotation = Math.cos(angleRadians);\n        sinRotation = Math.sin(angleRadians);\n\n        if (sinRotation * originalLabelWidth > me.maxHeight) {\n          // go back one step\n          labelRotation--;\n          break;\n        }\n\n        labelRotation++;\n        labelWidth = cosRotation * originalLabelWidth;\n      }\n    }\n\n    me.labelRotation = labelRotation;\n  },\n  afterCalculateTickRotation: function afterCalculateTickRotation() {\n    helpers.callback(this.options.afterCalculateTickRotation, [this]);\n  },\n  //\n  beforeFit: function beforeFit() {\n    helpers.callback(this.options.beforeFit, [this]);\n  },\n  fit: function fit() {\n    var me = this; // Reset\n\n    var minSize = me.minSize = {\n      width: 0,\n      height: 0\n    };\n    var labels = labelsFromTicks(me._ticks);\n    var opts = me.options;\n    var tickOpts = opts.ticks;\n    var scaleLabelOpts = opts.scaleLabel;\n    var gridLineOpts = opts.gridLines;\n    var display = opts.display;\n    var isHorizontal = me.isHorizontal();\n    var tickFont = parseFontOptions(tickOpts);\n    var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n    if (isHorizontal) {\n      // subtract the margins to line up with the chartArea if we are a full width scale\n      minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n    } else {\n      minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } // height\n\n\n    if (isHorizontal) {\n      minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } else {\n      minSize.height = me.maxHeight; // fill all the height\n    } // Are we showing a title for the scale?\n\n\n    if (scaleLabelOpts.display && display) {\n      var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n      var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n      if (isHorizontal) {\n        minSize.height += deltaHeight;\n      } else {\n        minSize.width += deltaHeight;\n      }\n    } // Don't bother fitting the ticks if we are not showing them\n\n\n    if (tickOpts.display && display) {\n      var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n      var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n      var lineSpace = tickFont.size * 0.5;\n      var tickPadding = me.options.ticks.padding;\n\n      if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n        me.longestLabelWidth = largestTextWidth;\n        var angleRadians = helpers.toRadians(me.labelRotation);\n        var cosRotation = Math.cos(angleRadians);\n        var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n        var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n        minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        me.ctx.font = tickFont.font;\n        var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n        var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n        // which means that the right padding is dominated by the font height\n\n        if (me.labelRotation !== 0) {\n          me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n        } else {\n          me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = lastLabelWidth / 2 + 3;\n        }\n      } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n        if (tickOpts.mirror) {\n          largestTextWidth = 0;\n        } else {\n          // use lineSpace for consistency with horizontal axis\n          // tickPadding is not implemented for horizontal\n          largestTextWidth += tickPadding + lineSpace;\n        }\n\n        minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n        me.paddingTop = tickFont.size / 2;\n        me.paddingBottom = tickFont.size / 2;\n      }\n    }\n\n    me.handleMargins();\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n\n  /**\n   * Handle margins and padding interactions\n   * @private\n   */\n  handleMargins: function handleMargins() {\n    var me = this;\n\n    if (me.margins) {\n      me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n      me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n      me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n      me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n    }\n  },\n  afterFit: function afterFit() {\n    helpers.callback(this.options.afterFit, [this]);\n  },\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  isFullWidth: function isFullWidth() {\n    return this.options.fullWidth;\n  },\n  // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n  getRightValue: function getRightValue(rawValue) {\n    // Null and undefined values first\n    if (helpers.isNullOrUndef(rawValue)) {\n      return NaN;\n    } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n    if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n      return NaN;\n    } // If it is in fact an object, dive in one more level\n\n\n    if (rawValue) {\n      if (this.isHorizontal()) {\n        if (rawValue.x !== undefined) {\n          return this.getRightValue(rawValue.x);\n        }\n      } else if (rawValue.y !== undefined) {\n        return this.getRightValue(rawValue.y);\n      }\n    } // Value is good, return it\n\n\n    return rawValue;\n  },\n\n  /**\n   * Used to get the value to display in the tooltip for the data at the given index\n   * @param index\n   * @param datasetIndex\n   */\n  getLabelForIndex: helpers.noop,\n\n  /**\n   * Returns the location of the given data point. Value can either be an index or a numerical value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param value\n   * @param index\n   * @param datasetIndex\n   */\n  getPixelForValue: helpers.noop,\n\n  /**\n   * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param pixel\n   */\n  getValueForPixel: helpers.noop,\n\n  /**\n   * Returns the location of the tick at the given index\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForTick: function getPixelForTick(index) {\n    var me = this;\n    var offset = me.options.offset;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var pixel = tickWidth * index + me.paddingLeft;\n\n      if (offset) {\n        pixel += tickWidth / 2;\n      }\n\n      var finalVal = me.left + Math.round(pixel);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n    return me.top + index * (innerHeight / (me._ticks.length - 1));\n  },\n\n  /**\n   * Utility for getting the pixel location of a percentage of scale\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForDecimal: function getPixelForDecimal(decimal) {\n    var me = this;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var valueOffset = innerWidth * decimal + me.paddingLeft;\n      var finalVal = me.left + Math.round(valueOffset);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    return me.top + decimal * me.height;\n  },\n\n  /**\n   * Returns the pixel for the minimum chart value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getBasePixel: function getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  },\n  getBaseValue: function getBaseValue() {\n    var me = this;\n    var min = me.min;\n    var max = me.max;\n    return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  },\n\n  /**\n   * Returns a subset of ticks to be plotted to avoid overlapping labels.\n   * @private\n   */\n  _autoSkip: function _autoSkip(ticks) {\n    var skipRatio;\n    var me = this;\n    var isHorizontal = me.isHorizontal();\n    var optionTicks = me.options.ticks.minor;\n    var tickCount = ticks.length;\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var cosRotation = Math.cos(labelRotationRadians);\n    var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n    var result = [];\n    var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n    var maxTicks;\n\n    if (optionTicks.maxTicksLimit) {\n      maxTicks = optionTicks.maxTicksLimit;\n    }\n\n    if (isHorizontal) {\n      skipRatio = false;\n\n      if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n        skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (maxTicks && tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n      }\n    }\n\n    for (i = 0; i < tickCount; i++) {\n      tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n      shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n      if (shouldSkip && i !== tickCount - 1) {\n        // leave tick in place but make sure it's not displayed (#4635)\n        delete tick.label;\n      }\n\n      result.push(tick);\n    }\n\n    return result;\n  },\n  // Actually draw the scale on the canvas\n  // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n  draw: function draw(chartArea) {\n    var me = this;\n    var options = me.options;\n\n    if (!options.display) {\n      return;\n    }\n\n    var context = me.ctx;\n    var globalDefaults = defaults.global;\n    var optionTicks = options.ticks.minor;\n    var optionMajorTicks = options.ticks.major || optionTicks;\n    var gridLines = options.gridLines;\n    var scaleLabel = options.scaleLabel;\n    var isRotated = me.labelRotation !== 0;\n    var isHorizontal = me.isHorizontal();\n    var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n    var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n    var tickFont = parseFontOptions(optionTicks);\n    var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n    var majorTickFont = parseFontOptions(optionMajorTicks);\n    var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n    var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n    var scaleLabelFont = parseFontOptions(scaleLabel);\n    var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var itemsToDraw = [];\n    var axisWidth = me.options.gridLines.lineWidth;\n    var xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n    var xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n    var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n    var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n    helpers.each(ticks, function (tick, index) {\n      // autoskipper skipped this tick (#4635)\n      if (helpers.isNullOrUndef(tick.label)) {\n        return;\n      }\n\n      var label = tick.label;\n      var lineWidth, lineColor, borderDash, borderDashOffset;\n\n      if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n        // Draw the first index specially\n        lineWidth = gridLines.zeroLineWidth;\n        lineColor = gridLines.zeroLineColor;\n        borderDash = gridLines.zeroLineBorderDash;\n        borderDashOffset = gridLines.zeroLineBorderDashOffset;\n      } else {\n        lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n        lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n        borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n        borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n      } // Common properties\n\n\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n      var textAlign = 'middle';\n      var textBaseline = 'middle';\n      var tickPadding = optionTicks.padding;\n\n      if (isHorizontal) {\n        var labelYOffset = tl + tickPadding;\n\n        if (options.position === 'bottom') {\n          // bottom\n          textBaseline = !isRotated ? 'top' : 'middle';\n          textAlign = !isRotated ? 'center' : 'right';\n          labelY = me.top + labelYOffset;\n        } else {\n          // top\n          textBaseline = !isRotated ? 'bottom' : 'middle';\n          textAlign = !isRotated ? 'center' : 'left';\n          labelY = me.bottom - labelYOffset;\n        }\n\n        var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (xLineValue < me.left) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        xLineValue += helpers.aliasPixel(lineWidth);\n        labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n        tx1 = tx2 = x1 = x2 = xLineValue;\n        ty1 = yTickStart;\n        ty2 = yTickEnd;\n        y1 = chartArea.top;\n        y2 = chartArea.bottom + axisWidth;\n      } else {\n        var isLeft = options.position === 'left';\n        var labelXOffset;\n\n        if (optionTicks.mirror) {\n          textAlign = isLeft ? 'left' : 'right';\n          labelXOffset = tickPadding;\n        } else {\n          textAlign = isLeft ? 'right' : 'left';\n          labelXOffset = tl + tickPadding;\n        }\n\n        labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n        var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (yLineValue < me.top) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        yLineValue += helpers.aliasPixel(lineWidth);\n        labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n        tx1 = xTickStart;\n        tx2 = xTickEnd;\n        x1 = chartArea.left;\n        x2 = chartArea.right + axisWidth;\n        ty1 = ty2 = y1 = y2 = yLineValue;\n      }\n\n      itemsToDraw.push({\n        tx1: tx1,\n        ty1: ty1,\n        tx2: tx2,\n        ty2: ty2,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        labelX: labelX,\n        labelY: labelY,\n        glWidth: lineWidth,\n        glColor: lineColor,\n        glBorderDash: borderDash,\n        glBorderDashOffset: borderDashOffset,\n        rotation: -1 * labelRotationRadians,\n        label: label,\n        major: tick.major,\n        textBaseline: textBaseline,\n        textAlign: textAlign\n      });\n    }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n    helpers.each(itemsToDraw, function (itemToDraw) {\n      if (gridLines.display) {\n        context.save();\n        context.lineWidth = itemToDraw.glWidth;\n        context.strokeStyle = itemToDraw.glColor;\n\n        if (context.setLineDash) {\n          context.setLineDash(itemToDraw.glBorderDash);\n          context.lineDashOffset = itemToDraw.glBorderDashOffset;\n        }\n\n        context.beginPath();\n\n        if (gridLines.drawTicks) {\n          context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n          context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n        }\n\n        if (gridLines.drawOnChartArea) {\n          context.moveTo(itemToDraw.x1, itemToDraw.y1);\n          context.lineTo(itemToDraw.x2, itemToDraw.y2);\n        }\n\n        context.stroke();\n        context.restore();\n      }\n\n      if (optionTicks.display) {\n        // Make sure we draw text in the correct color and font\n        context.save();\n        context.translate(itemToDraw.labelX, itemToDraw.labelY);\n        context.rotate(itemToDraw.rotation);\n        context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n        context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n        context.textBaseline = itemToDraw.textBaseline;\n        context.textAlign = itemToDraw.textAlign;\n        var label = itemToDraw.label;\n\n        if (helpers.isArray(label)) {\n          var lineCount = label.length;\n          var lineHeight = tickFont.size * 1.5;\n          var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n          for (var i = 0; i < lineCount; ++i) {\n            // We just make sure the multiline element is a string here..\n            context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n            y += lineHeight;\n          }\n        } else {\n          context.fillText(label, 0, 0);\n        }\n\n        context.restore();\n      }\n    });\n\n    if (scaleLabel.display) {\n      // Draw the scale label\n      var scaleLabelX;\n      var scaleLabelY;\n      var rotation = 0;\n      var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n      if (isHorizontal) {\n        scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n        scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n      } else {\n        var isLeft = options.position === 'left';\n        scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n        scaleLabelY = me.top + (me.bottom - me.top) / 2;\n        rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n      }\n\n      context.save();\n      context.translate(scaleLabelX, scaleLabelY);\n      context.rotate(rotation);\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n      context.font = scaleLabelFont.font;\n      context.fillText(scaleLabel.labelString, 0, 0);\n      context.restore();\n    }\n\n    if (gridLines.drawBorder) {\n      // Draw the line at the edge of the axis\n      context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n      context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n      var x1 = me.left;\n      var x2 = me.right + axisWidth;\n      var y1 = me.top;\n      var y2 = me.bottom + axisWidth;\n      var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n      if (isHorizontal) {\n        y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n        y1 += aliasPixel;\n        y2 += aliasPixel;\n      } else {\n        x1 = x2 = options.position === 'left' ? me.right : me.left;\n        x1 += aliasPixel;\n        x2 += aliasPixel;\n      }\n\n      context.beginPath();\n      context.moveTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.stroke();\n    }\n  }\n});","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n        if (maxTick < 1e-4) {\n          // all ticks are small numbers; use scientific notation\n          var logTick = helpers.log10(Math.abs(tickValue));\n          tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n        } else {\n          var numDecimal = -1 * Math.floor(logDelta);\n          numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n          tickString = tickValue.toFixed(numDecimal);\n        }\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-in plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (typeof obj === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n  chart: null,\n  // the animation associated chart instance\n  currentStep: 0,\n  // the current animation step\n  numSteps: 60,\n  // default number of steps\n  easing: '',\n  // the easing to use for this animation\n  render: null,\n  // render function used by the animation service\n  onAnimationProgress: null,\n  // user specified callback to fire on each step of the animation\n  onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n}); // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'animationObject', {\n  get: function get() {\n    return this;\n  }\n});\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'chartInstance', {\n  get: function get() {\n    return this.chart;\n  },\n  set: function set(value) {\n    this.chart = value;\n  }\n});","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = {\n  frameDuration: 17,\n  animations: [],\n  dropFrames: 0,\n  request: null,\n\n  /**\n   * @param {Chart} chart - The chart to animate.\n   * @param {Chart.Animation} animation - The animation that we will animate.\n   * @param {Number} duration - The animation duration in ms.\n   * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n   */\n  addAnimation: function addAnimation(chart, animation, duration, lazy) {\n    var animations = this.animations;\n    var i, ilen;\n    animation.chart = chart;\n\n    if (!lazy) {\n      chart.animating = true;\n    }\n\n    for (i = 0, ilen = animations.length; i < ilen; ++i) {\n      if (animations[i].chart === chart) {\n        animations[i] = animation;\n        return;\n      }\n    }\n\n    animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n    if (animations.length === 1) {\n      this.requestAnimationFrame();\n    }\n  },\n  cancelAnimation: function cancelAnimation(chart) {\n    var index = helpers.findIndex(this.animations, function (animation) {\n      return animation.chart === chart;\n    });\n\n    if (index !== -1) {\n      this.animations.splice(index, 1);\n      chart.animating = false;\n    }\n  },\n  requestAnimationFrame: function requestAnimationFrame() {\n    var me = this;\n\n    if (me.request === null) {\n      // Skip animation frame requests until the active one is executed.\n      // This can happen when processing mouse events, e.g. 'mousemove'\n      // and 'mouseout' events will trigger multiple renders.\n      me.request = helpers.requestAnimFrame.call(window, function () {\n        me.request = null;\n        me.startDigest();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  startDigest: function startDigest() {\n    var me = this;\n    var startTime = Date.now();\n    var framesToDrop = 0;\n\n    if (me.dropFrames > 1) {\n      framesToDrop = Math.floor(me.dropFrames);\n      me.dropFrames = me.dropFrames % 1;\n    }\n\n    me.advance(1 + framesToDrop);\n    var endTime = Date.now();\n    me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n    if (me.animations.length > 0) {\n      me.requestAnimationFrame();\n    }\n  },\n\n  /**\n   * @private\n   */\n  advance: function advance(count) {\n    var animations = this.animations;\n    var animation, chart;\n    var i = 0;\n\n    while (i < animations.length) {\n      animation = animations[i];\n      chart = animation.chart;\n      animation.currentStep = (animation.currentStep || 0) + count;\n      animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n      helpers.callback(animation.render, [chart, animation], chart);\n      helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n      if (animation.currentStep >= animation.numSteps) {\n        helpers.callback(animation.onAnimationComplete, [animation], chart);\n        chart.animating = false;\n        animations.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nvar positioners = {\n  /**\n   * Average mode places the tooltip at the average position of the elements shown\n   * @function Chart.Tooltip.positioners.average\n   * @param elements {ChartElement[]} the elements being displayed in the tooltip\n   * @returns {Point} tooltip position\n   */\n  average: function average(elements) {\n    if (!elements.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: Math.round(x / count),\n      y: Math.round(y / count)\n    };\n  },\n\n  /**\n   * Gets the tooltip position nearest of the item nearest to the event position\n   * @function Chart.Tooltip.positioners.nearest\n   * @param elements {Chart.Element[]} the tooltip elements\n   * @param eventPosition {Point} the position of the event in canvas coordinates\n   * @returns {Point} the tooltip position\n   */\n  nearest: function nearest(elements, eventPosition) {\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n/**\n * Helper method to merge the opacity into a color\n */\n\nfunction mergeOpacity(colorString, opacity) {\n  var color = helpers.color(colorString);\n  return color.alpha(opacity * color.alpha()).rgbaString();\n} // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (helpers.isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\n\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n} // Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\n\n\nfunction createTooltipItem(element) {\n  var xScale = element._xScale;\n  var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n  var index = element._index;\n  var datasetIndex = element._datasetIndex;\n  return {\n    xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n    yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n    index: index,\n    datasetIndex: datasetIndex,\n    x: element._model.x,\n    y: element._model.y\n  };\n}\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\n\n\nfunction getBaseModel(tooltipOpts) {\n  var globalDefaults = defaults.global;\n  var valueOrDefault = helpers.valueOrDefault;\n  return {\n    // Positioning\n    xPadding: tooltipOpts.xPadding,\n    yPadding: tooltipOpts.yPadding,\n    xAlign: tooltipOpts.xAlign,\n    yAlign: tooltipOpts.yAlign,\n    // Body\n    bodyFontColor: tooltipOpts.bodyFontColor,\n    _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n    _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n    _bodyAlign: tooltipOpts.bodyAlign,\n    bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n    bodySpacing: tooltipOpts.bodySpacing,\n    // Title\n    titleFontColor: tooltipOpts.titleFontColor,\n    _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n    _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n    titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n    _titleAlign: tooltipOpts.titleAlign,\n    titleSpacing: tooltipOpts.titleSpacing,\n    titleMarginBottom: tooltipOpts.titleMarginBottom,\n    // Footer\n    footerFontColor: tooltipOpts.footerFontColor,\n    _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n    _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n    footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n    _footerAlign: tooltipOpts.footerAlign,\n    footerSpacing: tooltipOpts.footerSpacing,\n    footerMarginTop: tooltipOpts.footerMarginTop,\n    // Appearance\n    caretSize: tooltipOpts.caretSize,\n    cornerRadius: tooltipOpts.cornerRadius,\n    backgroundColor: tooltipOpts.backgroundColor,\n    opacity: 0,\n    legendColorBackground: tooltipOpts.multiKeyBackground,\n    displayColors: tooltipOpts.displayColors,\n    borderColor: tooltipOpts.borderColor,\n    borderWidth: tooltipOpts.borderWidth\n  };\n}\n/**\n * Get the size of the tooltip\n */\n\n\nfunction getTooltipSize(tooltip, model) {\n  var ctx = tooltip._chart.ctx;\n  var height = model.yPadding * 2; // Tooltip Padding\n\n  var width = 0; // Count of all lines in the body\n\n  var body = model.body;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n  var titleLineCount = model.title.length;\n  var footerLineCount = model.footer.length;\n  var titleFontSize = model.titleFontSize;\n  var bodyFontSize = model.bodyFontSize;\n  var footerFontSize = model.footerFontSize;\n  height += titleLineCount * titleFontSize; // Title Lines\n\n  height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n  height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n  height += combinedBodyLength * bodyFontSize; // Body Lines\n\n  height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n  height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n  height += footerLineCount * footerFontSize; // Footer Lines\n\n  height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n  // Title width\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n  helpers.each(model.title, maxLineWidth); // Body width\n\n  ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n  helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n  widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n  helpers.each(body, function (bodyItem) {\n    helpers.each(bodyItem.before, maxLineWidth);\n    helpers.each(bodyItem.lines, maxLineWidth);\n    helpers.each(bodyItem.after, maxLineWidth);\n  }); // Reset back to 0\n\n  widthPadding = 0; // Footer width\n\n  ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n  helpers.each(model.footer, maxLineWidth); // Add padding\n\n  width += 2 * model.xPadding;\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Helper to get the alignment of a tooltip given the size\n */\n\n\nfunction determineAlignment(tooltip, size) {\n  var model = tooltip._model;\n  var chart = tooltip._chart;\n  var chartArea = tooltip._chart.chartArea;\n  var xAlign = 'center';\n  var yAlign = 'center';\n\n  if (model.y < size.height) {\n    yAlign = 'top';\n  } else if (model.y > chart.height - size.height) {\n    yAlign = 'bottom';\n  }\n\n  var lf, rf; // functions to determine left, right alignment\n\n  var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n  var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n  var midX = (chartArea.left + chartArea.right) / 2;\n  var midY = (chartArea.top + chartArea.bottom) / 2;\n\n  if (yAlign === 'center') {\n    lf = function lf(x) {\n      return x <= midX;\n    };\n\n    rf = function rf(x) {\n      return x > midX;\n    };\n  } else {\n    lf = function lf(x) {\n      return x <= size.width / 2;\n    };\n\n    rf = function rf(x) {\n      return x >= chart.width - size.width / 2;\n    };\n  }\n\n  olf = function olf(x) {\n    return x + size.width + model.caretSize + model.caretPadding > chart.width;\n  };\n\n  orf = function orf(x) {\n    return x - size.width - model.caretSize - model.caretPadding < 0;\n  };\n\n  yf = function yf(y) {\n    return y <= midY ? 'top' : 'bottom';\n  };\n\n  if (lf(model.x)) {\n    xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n    if (olf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  } else if (rf(model.x)) {\n    xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n    if (orf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  }\n\n  var opts = tooltip._options;\n  return {\n    xAlign: opts.xAlign ? opts.xAlign : xAlign,\n    yAlign: opts.yAlign ? opts.yAlign : yAlign\n  };\n}\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\n\n\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n  // Background Position\n  var x = vm.x;\n  var y = vm.y;\n  var caretSize = vm.caretSize;\n  var caretPadding = vm.caretPadding;\n  var cornerRadius = vm.cornerRadius;\n  var xAlign = alignment.xAlign;\n  var yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n\n  if (xAlign === 'right') {\n    x -= size.width;\n  } else if (xAlign === 'center') {\n    x -= size.width / 2;\n\n    if (x + size.width > chart.width) {\n      x = chart.width - size.width;\n    }\n\n    if (x < 0) {\n      x = 0;\n    }\n  }\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= size.height + paddingAndSize;\n  } else {\n    y -= size.height / 2;\n  }\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n/**\n * Helper to build before and after body lines\n */\n\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n  initialize: function initialize() {\n    this._model = getBaseModel(this._options);\n    this._lastActive = [];\n  },\n  // Get the title\n  // Args are: (tooltipItem, data)\n  getTitle: function getTitle() {\n    var me = this;\n    var opts = me._options;\n    var callbacks = opts.callbacks;\n    var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n    var title = callbacks.title.apply(me, arguments);\n    var afterTitle = callbacks.afterTitle.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  },\n  // Args are: (tooltipItem, data)\n  getBeforeBody: function getBeforeBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n  },\n  // Args are: (tooltipItem, data)\n  getBody: function getBody(tooltipItems, data) {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var bodyItems = [];\n    helpers.each(tooltipItems, function (tooltipItem) {\n      var bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n      pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n      pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  },\n  // Args are: (tooltipItem, data)\n  getAfterBody: function getAfterBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n  },\n  // Get the footer and beforeFooter and afterFooter lines\n  // Args are: (tooltipItem, data)\n  getFooter: function getFooter() {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n    var footer = callbacks.footer.apply(me, arguments);\n    var afterFooter = callbacks.afterFooter.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  },\n  update: function update(changed) {\n    var me = this;\n    var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n    // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n    // which breaks any animations.\n\n    var existingModel = me._model;\n    var model = me._model = getBaseModel(opts);\n    var active = me._active;\n    var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n    var alignment = {\n      xAlign: existingModel.xAlign,\n      yAlign: existingModel.yAlign\n    };\n    var backgroundPoint = {\n      x: existingModel.x,\n      y: existingModel.y\n    };\n    var tooltipSize = {\n      width: existingModel.width,\n      height: existingModel.height\n    };\n    var tooltipPosition = {\n      x: existingModel.caretX,\n      y: existingModel.caretY\n    };\n    var i, len;\n\n    if (active.length) {\n      model.opacity = 1;\n      var labelColors = [];\n      var labelTextColors = [];\n      tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n      var tooltipItems = [];\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(active[i]));\n      } // If the user provided a filter function, use it to modify the tooltip items\n\n\n      if (opts.filter) {\n        tooltipItems = tooltipItems.filter(function (a) {\n          return opts.filter(a, data);\n        });\n      } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n      if (opts.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return opts.itemSort(a, b, data);\n        });\n      } // Determine colors for boxes\n\n\n      helpers.each(tooltipItems, function (tooltipItem) {\n        labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n        labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n      }); // Build the Text Lines\n\n      model.title = me.getTitle(tooltipItems, data);\n      model.beforeBody = me.getBeforeBody(tooltipItems, data);\n      model.body = me.getBody(tooltipItems, data);\n      model.afterBody = me.getAfterBody(tooltipItems, data);\n      model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n      model.x = Math.round(tooltipPosition.x);\n      model.y = Math.round(tooltipPosition.y);\n      model.caretPadding = opts.caretPadding;\n      model.labelColors = labelColors;\n      model.labelTextColors = labelTextColors; // data points\n\n      model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n      tooltipSize = getTooltipSize(this, model);\n      alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n      backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n    } else {\n      model.opacity = 0;\n    }\n\n    model.xAlign = alignment.xAlign;\n    model.yAlign = alignment.yAlign;\n    model.x = backgroundPoint.x;\n    model.y = backgroundPoint.y;\n    model.width = tooltipSize.width;\n    model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n    model.caretX = tooltipPosition.x;\n    model.caretY = tooltipPosition.y;\n    me._model = model;\n\n    if (changed && opts.custom) {\n      opts.custom.call(me, model);\n    }\n\n    return me;\n  },\n  drawCaret: function drawCaret(tooltipPoint, size) {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  },\n  getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n    var x1, x2, x3, y1, y2, y3;\n    var caretSize = vm.caretSize;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var ptX = tooltipPoint.x;\n    var ptY = tooltipPoint.y;\n    var width = size.width;\n    var height = size.height;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        x3 = x1;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        x3 = x1;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        x2 = vm.caretX;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        y3 = y1;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        y3 = y1; // invert drawing order\n\n        var tmp = x3;\n        x3 = x1;\n        x1 = tmp;\n      }\n    }\n\n    return {\n      x1: x1,\n      x2: x2,\n      x3: x3,\n      y1: y1,\n      y2: y2,\n      y3: y3\n    };\n  },\n  drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n    var title = vm.title;\n\n    if (title.length) {\n      ctx.textAlign = vm._titleAlign;\n      ctx.textBaseline = 'top';\n      var titleFontSize = vm.titleFontSize;\n      var titleSpacing = vm.titleSpacing;\n      ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n      ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n      var i, len;\n\n      for (i = 0, len = title.length; i < len; ++i) {\n        ctx.fillText(title[i], pt.x, pt.y);\n        pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === title.length) {\n          pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  },\n  drawBody: function drawBody(pt, vm, ctx, opacity) {\n    var bodyFontSize = vm.bodyFontSize;\n    var bodySpacing = vm.bodySpacing;\n    var body = vm.body;\n    ctx.textAlign = vm._bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n    var xLinePadding = 0;\n\n    var fillLineOfText = function fillLineOfText(line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    }; // Before body lines\n\n\n    ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n    helpers.each(vm.beforeBody, fillLineOfText);\n    var drawColorBoxes = vm.displayColors;\n    xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n    helpers.each(body, function (bodyItem, i) {\n      var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText);\n      helpers.each(bodyItem.lines, function (line) {\n        // Draw Legend-like boxes if needed\n        if (drawColorBoxes) {\n          // Fill a white rect so that colours merge nicely if the opacity is < 1\n          ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n          ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n          ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n          ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n          ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n          ctx.fillStyle = textColor;\n        }\n\n        fillLineOfText(line);\n      });\n      helpers.each(bodyItem.after, fillLineOfText);\n    }); // Reset back to 0 for after body\n\n    xLinePadding = 0; // After body lines\n\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  },\n  drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n    var footer = vm.footer;\n\n    if (footer.length) {\n      pt.y += vm.footerMarginTop;\n      ctx.textAlign = vm._footerAlign;\n      ctx.textBaseline = 'top';\n      ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n      ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n      helpers.each(footer, function (line) {\n        ctx.fillText(line, pt.x, pt.y);\n        pt.y += vm.footerFontSize + vm.footerSpacing;\n      });\n    }\n  },\n  drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n    ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n    ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n    ctx.lineWidth = vm.borderWidth;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var x = pt.x;\n    var y = pt.y;\n    var width = tooltipSize.width;\n    var height = tooltipSize.height;\n    var radius = vm.cornerRadius;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (vm.borderWidth > 0) {\n      ctx.stroke();\n    }\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n\n    if (vm.opacity === 0) {\n      return;\n    }\n\n    var tooltipSize = {\n      width: vm.width,\n      height: vm.height\n    };\n    var pt = {\n      x: vm.x,\n      y: vm.y\n    }; // IE11/Edge does not like very small opacities, so snap to 0\n\n    var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n    var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n    if (this._options.enabled && hasTooltipContent) {\n      // Draw Background\n      this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n      pt.x += vm.xPadding;\n      pt.y += vm.yPadding; // Titles\n\n      this.drawTitle(pt, vm, ctx, opacity); // Body\n\n      this.drawBody(pt, vm, ctx, opacity); // Footer\n\n      this.drawFooter(pt, vm, ctx, opacity);\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @returns {Boolean} true if the tooltip changed\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var options = me._options;\n    var changed = false;\n    me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n    if (e.type === 'mouseout') {\n      me._active = [];\n    } else {\n      me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n    } // Remember Last Actives\n\n\n    changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n    if (changed) {\n      me._lastActive = me._active;\n\n      if (options.enabled || options.custom) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true);\n        me.pivot();\n      }\n    }\n\n    return changed;\n  }\n});\n/**\n * @namespace Chart.Tooltip.positioners\n */\n\nexports.positioners = positioners;","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      // NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n      // on Chrome when `r` is exactly half the height or the width.\n      var epsilon = 0.0000001;\n      var r = Math.min(radius, height / 2 - epsilon, width / 2 - epsilon);\n      ctx.moveTo(x + r, y);\n      ctx.lineTo(x + width - r, y);\n      ctx.arcTo(x + width, y, x + width, y + r, r);\n      ctx.lineTo(x + width, y + height - r);\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n      ctx.lineTo(x + r, y + height);\n      ctx.arcTo(x, y + height, x, y + height - r, r);\n      ctx.lineTo(x, y + r);\n      ctx.arcTo(x, y, x + r, y, r);\n      ctx.closePath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n    rotation = rotation || 0;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotation * Math.PI / 180);\n    ctx.beginPath();\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.arc(0, 0, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        break;\n\n      case 'triangle':\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(-edgeLength / 2, height / 3);\n        ctx.lineTo(edgeLength / 2, height / 3);\n        ctx.lineTo(0, -2 * height / 3);\n        ctx.closePath();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.rect(-size, -size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = -offset;\n        var topY = -offset;\n        var sideSize = Math.SQRT2 * radius; // NOTE(SB) the rounded rect implementation changed to use `arcTo`\n        // instead of `quadraticCurveTo` since it generates better results\n        // when rect is almost a circle. 0.425 (instead of 0.5) produces\n        // results visually closer to the previous impl.\n\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.moveTo(-size, 0);\n        ctx.lineTo(0, size);\n        ctx.lineTo(size, 0);\n        ctx.lineTo(0, -size);\n        ctx.closePath();\n        break;\n\n      case 'cross':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'crossRot':\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'star':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'line':\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'dash':\n        ctx.moveTo(0, 0);\n        ctx.lineTo(radius, 0);\n        break;\n    }\n\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.target || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n\n    var parentNode = helpers._getParentNode(domNode);\n\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n  /**\n   * @private\n  \t */\n\n\n  helpers._calculatePadding = function (container, padding, parentDimension) {\n    padding = helpers.getStyle(container, padding);\n    return padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n  };\n  /**\n   * @private\n   */\n\n\n  helpers._getParentNode = function (domNode) {\n    var parent = domNode.parentNode;\n\n    if (parent && parent.host) {\n      parent = parent.host;\n    }\n\n    return parent;\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var clientWidth = container.clientWidth;\n\n    var paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\n    var paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n    var w = clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var clientHeight = container.clientHeight;\n\n    var paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\n    var paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n    var h = clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var rotation = vm.rotation;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    if (vm.skip) {\n      return;\n    } // Clipping for Points.\n\n\n    if (chartArea === undefined || model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y) {\n      ctx.strokeStyle = vm.borderColor || defaultColor;\n      ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n      ctx.fillStyle = vm.backgroundColor || defaultColor;\n      helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","'use strict';\n\nvar Animation = require('./core.animation');\n\nvar animations = require('./core.animations');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: me.options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var factor;\n  var precision;\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n    precision = generationOptions.precision;\n\n    if (precision !== undefined) {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function () {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var elementOpts = this.chart.options.elements.arc;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    getPointRotation: function getPointRotation(point, index) {\n      var pointRotation = this.chart.options.elements.point.rotation;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.rotation)) {\n        pointRotation = custom.rotation;\n      } else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n        pointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n      }\n\n      return pointRotation;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        rotation: me.getPointRotation(point, index),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      // Point\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      var elementOpts = this.chart.options.elements.arc;\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = arc._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return helpers.options.resolve([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          rotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;"],"sourceRoot":""}