{"version":3,"sources":["../node_modules/lodash/toInteger.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/find.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_baseEach.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseForOwn.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/_baseFor.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/elements/index.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createFind.js","../node_modules/lodash/_createBaseEach.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/chart.js/src/chart.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/color-convert/index.js","../node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/chart.js/src/helpers/index.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/toNumber.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalArrays.js"],"names":["toFinite","__webpack_require__","module","exports","value","result","remainder","castPath","isArguments","isArray","isIndex","isLength","toKey","object","path","hasFunc","index","length","key","find","createFind","isObject","srcValue","undefined","Object","array","predicate","map","Array","size","forEach","baseFindIndex","baseIteratee","toInteger","nativeMax","Math","max","fromIndex","Stack","equalArrays","equalByTag","equalObjects","getTag","isBuffer","isTypedArray","COMPARE_PARTIAL_FLAG","argsTag","arrayTag","objectTag","hasOwnProperty","prototype","other","bitmask","customizer","equalFunc","stack","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","call","othIsWrapped","objUnwrapped","othUnwrapped","Symbol","Uint8Array","eq","mapToArray","setToArray","COMPARE_UNORDERED_FLAG","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","valueOf","tag","byteLength","byteOffset","buffer","name","message","convert","isPartial","stacked","get","set","getAllKeys","objProps","objLength","skipCtor","objValue","othValue","compared","objCtor","constructor","othCtor","baseForOwn","baseEach","createBaseEach","process","d","__webpack_exports__","Doughnut","Pie","Line","Bar","HorizontalBar","Radar","Polar","Bubble","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","assign","target","i","arguments","source","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","this","_len","args","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","label","console","error","_this2","a","helpers","configMerge","currentDatasets","config","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","_this16","_ref7","_React$Component9","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","defaults","toNumber","INFINITY","MAX_INTEGER","baseHasIn","hasPath","baseFor","iteratee","color","Element","configuration","extend","initialize","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","ilen","actual","origin","c0","c1","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","baseIsMatch","getMatchData","matchesStrictComparable","matchData","baseIsEqual","noCustomizer","isStrictComparable","hasIn","isKey","baseProperty","basePropertyDeep","baseGet","createBaseFor","layouts","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","merge","scale","updateScaleDefaults","additions","addScalesToLayout","chart","each","scales","fullWidth","weight","addBox","Arc","Point","Rectangle","fromRight","keysFunc","iterable","isArrayLike","findIndexFunc","collection","eachFunc","filterByPosition","where","v","sortByWeight","reverse","_tmpIndex_","sort","b","v0","v1","item","boxes","push","removeBox","layoutItem","configure","prop","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","Ticks","labelsFromTicks","ticks","labels","getLineValue","offsetGridLines","lineValue","getPixelForTick","computeTextSize","context","tick","font","longestText","measureText","parseFontOptions","valueOrDefault","globalDefaults","global","fontSize","defaultFontSize","style","fontStyle","defaultFontStyle","family","fontFamily","defaultFontFamily","fontString","parseLineHeight","toLineHeight","lineHeight","_set","offset","gridLines","lineWidth","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","borderDash","borderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","callback","formatters","values","minor","major","paddingLeft","paddingTop","paddingRight","paddingBottom","getTicks","_ticks","mergeTicksOptions","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","noop","tickOpts","userCallback","ctx","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","cos","sin","opts","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","min","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","isNullOrUndef","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","round","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","floor","draw","optionMajorTicks","isRotated","tickFontColor","fontColor","defaultFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","zeroLineIndex","valueAtIndexOrDefault","textAlign","textBaseline","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","save","strokeStyle","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","rotate","fillStyle","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","PI","linear","tickValue","delta","abs","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","pow","uid","toString","defaultValue","fn","thisArg","loopable","len","arrayEquals","a0","a1","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","getValueOrDefault","getValueAtIndexOrDefault","Chart","Animation","animationService","elements","Interaction","platform","Scale","scaleService","Tooltip","register","window","Legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","canvas","layoutService","string","Color","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","degrees","mixinColor","p","w1","w2","toJSON","slice","spaces","maxes","getValues","space","charAt","capped","chans","sname","svalues","currentStep","numSteps","easing","onAnimationProgress","onAnimationComplete","defineProperty","animation","duration","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","count","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","isDatasetVisible","getDatasetMeta","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","datasetIndex","_index","modes","single","_datasetIndex","x-axis","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_plugins","_cacheId","plugin","unregister","idx","clear","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","_invalidate","tooltips","enabled","custom","mode","backgroundColor","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","borderColor","borderWidth","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","_options","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","el","pos","eventPosition","nearestElement","distanceBetweenPoints","tp","mergeOpacity","colorString","opacity","pushOrConcat","base","toPush","splitNewlines","str","String","split","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getBeforeAfterBodyLines","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","_data","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","filter","itemSort","_chart","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","line","getTooltipSize","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","radius","quadraticCurveTo","closePath","fill","hasTooltipContent","handleEvent","getElementsAtEventForMode","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","animationDuration","defaultColor","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","clearRect","roundedRect","arcTo","rect","drawPoint","edgeLength","xOffset","yOffset","isNaN","arc","SQRT2","leftX","topY","sideSize","drawImage","clipArea","area","clip","unclipArea","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","matches","match","resolve","inputs","parseMaxStyle","styleValue","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","slen","filterCallback","filtered","scope","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","arg","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","inLabelRange","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","borderCapStyle","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","xRange","hitRadius","pointStyle","hoverBorderWidth","isVertical","bar","getBarBounds","halfWidth","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","_addEventListener","listener","_removeEventListener","createEvent","nativeEvent","addResizeListener","expando","resizer","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","injectCSS","getElementById","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","positionIsHorizontal","types","instances","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","newOptions","updateConfig","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","res","resyncElements","removeHoverStyle","$previousStyle","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","stepSize","fixedStepSize","generationOptions","dataRange","factor","spacing","niceRange","ceil","niceMin","niceMax","numSpaces","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","_fit","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","parse","input","time","startOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","categoryPercentage","barPercentage","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","horizontalBar","dataPoint","bubble","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","elementOpts","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","halfBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","PolarArea","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","setter","initializer","accumulator","baseMatches","baseMatchesProperty","identity","isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","replace","isBinary","test","baseIsEqualDeep","isObjectLike","SetCache","arraySome","cacheHas","arrLength","othLength","seen","arrValue","othIndex"],"mappings":"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","file":"static/js/4.7e96100d.chunk.js","sourcesContent":["var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","'use strict';\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = typeof target;\n\n    if (type === typeof origin) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n  // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n  // use the new chart options to grab the correct scale\n  constructors: {},\n  // Use a registration function so that we can move to an ES6 map when we no longer need to support\n  // old browsers\n  // Scale config defaults\n  defaults: {},\n  registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n    this.constructors[type] = scaleConstructor;\n    this.defaults[type] = helpers.clone(scaleDefaults);\n  },\n  getScaleConstructor: function getScaleConstructor(type) {\n    return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n  },\n  getScaleDefaults: function getScaleDefaults(type) {\n    // Return the scale defaults merged with the global settings so that we always use the latest ones\n    return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n  },\n  updateScaleDefaults: function updateScaleDefaults(type, additions) {\n    var me = this;\n\n    if (me.defaults.hasOwnProperty(type)) {\n      me.defaults[type] = helpers.extend(me.defaults[type], additions);\n    }\n  },\n  addScalesToLayout: function addScalesToLayout(chart) {\n    // Adds each scale to the chart.boxes array to be sized accordingly\n    helpers.each(chart.scales, function (scale) {\n      // Set ILayoutItem parameters for backwards compatibility\n      scale.fullWidth = scale.options.fullWidth;\n      scale.position = scale.options.position;\n      scale.weight = scale.options.weight;\n      layouts.addBox(chart, scale);\n    });\n  }\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n  return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n  var valueOrDefault = helpers.valueOrDefault;\n  var globalDefaults = defaults.global;\n  var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n  var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n  var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n  return {\n    size: size,\n    style: style,\n    family: family,\n    font: helpers.fontString(size, style, family)\n  };\n}\n\nfunction parseLineHeight(options) {\n  return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n  /**\n   * Get the padding needed for the scale\n   * @method getPadding\n   * @private\n   * @returns {Padding} the necessary padding\n   */\n  getPadding: function getPadding() {\n    var me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  },\n\n  /**\n   * Returns the scale tick objects ({label, major})\n   * @since 2.7\n   */\n  getTicks: function getTicks() {\n    return this._ticks;\n  },\n  // These methods are ordered by lifecyle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n  mergeTicksOptions: function mergeTicksOptions() {\n    var ticks = this.options.ticks;\n\n    if (ticks.minor === false) {\n      ticks.minor = {\n        display: false\n      };\n    }\n\n    if (ticks.major === false) {\n      ticks.major = {\n        display: false\n      };\n    }\n\n    for (var key in ticks) {\n      if (key !== 'major' && key !== 'minor') {\n        if (typeof ticks.minor[key] === 'undefined') {\n          ticks.minor[key] = ticks[key];\n        }\n\n        if (typeof ticks.major[key] === 'undefined') {\n          ticks.major[key] = ticks[key];\n        }\n      }\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    helpers.callback(this.options.beforeUpdate, [this]);\n  },\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this;\n    var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = helpers.extend({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Data min/max\n\n    me.beforeDataLimits();\n    me.determineDataLimits();\n    me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n    // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n    // and must not be accessed directly from outside this class. `this.ticks` being\n    // around for long time and not marked as private, we can't change its structure\n    // without unexpected breaking changes. If you need to access the scale ticks,\n    // use scale.getTicks() instead.\n\n    me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n    // we still support no return (`this.ticks` internally set by calling this method).\n\n    ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n    // COMPAT, we still support no return (`this.ticks` internally changed by calling\n    // this method and supposed to contain only string values).\n\n    labels = me.convertTicksToLabels(ticks) || me.ticks;\n    me.afterTickToLabelConversion();\n    me.ticks = labels; // BACKWARD COMPATIBILITY\n    // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n    // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      tick = ticks[i];\n\n      if (!tick) {\n        ticks.push(tick = {\n          label: label,\n          major: false\n        });\n      } else {\n        tick.label = label;\n      }\n    }\n\n    me._ticks = ticks; // Tick Rotation\n\n    me.beforeCalculateTickRotation();\n    me.calculateTickRotation();\n    me.afterCalculateTickRotation(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: function afterUpdate() {\n    helpers.callback(this.options.afterUpdate, [this]);\n  },\n  //\n  beforeSetDimensions: function beforeSetDimensions() {\n    helpers.callback(this.options.beforeSetDimensions, [this]);\n  },\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  },\n  afterSetDimensions: function afterSetDimensions() {\n    helpers.callback(this.options.afterSetDimensions, [this]);\n  },\n  // Data limits\n  beforeDataLimits: function beforeDataLimits() {\n    helpers.callback(this.options.beforeDataLimits, [this]);\n  },\n  determineDataLimits: helpers.noop,\n  afterDataLimits: function afterDataLimits() {\n    helpers.callback(this.options.afterDataLimits, [this]);\n  },\n  //\n  beforeBuildTicks: function beforeBuildTicks() {\n    helpers.callback(this.options.beforeBuildTicks, [this]);\n  },\n  buildTicks: helpers.noop,\n  afterBuildTicks: function afterBuildTicks() {\n    helpers.callback(this.options.afterBuildTicks, [this]);\n  },\n  beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n    helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n  },\n  convertTicksToLabels: function convertTicksToLabels() {\n    var me = this; // Convert ticks to strings\n\n    var tickOpts = me.options.ticks;\n    me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n  },\n  afterTickToLabelConversion: function afterTickToLabelConversion() {\n    helpers.callback(this.options.afterTickToLabelConversion, [this]);\n  },\n  //\n  beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n    helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n  },\n  calculateTickRotation: function calculateTickRotation() {\n    var me = this;\n    var context = me.ctx;\n    var tickOpts = me.options.ticks;\n    var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n    // between x offsets between 0 and 1.\n\n    var tickFont = parseFontOptions(tickOpts);\n    context.font = tickFont.font;\n    var labelRotation = tickOpts.minRotation || 0;\n\n    if (labels.length && me.options.display && me.isHorizontal()) {\n      var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n      var labelWidth = originalLabelWidth;\n      var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n      var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n      while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n        var angleRadians = helpers.toRadians(labelRotation);\n        cosRotation = Math.cos(angleRadians);\n        sinRotation = Math.sin(angleRadians);\n\n        if (sinRotation * originalLabelWidth > me.maxHeight) {\n          // go back one step\n          labelRotation--;\n          break;\n        }\n\n        labelRotation++;\n        labelWidth = cosRotation * originalLabelWidth;\n      }\n    }\n\n    me.labelRotation = labelRotation;\n  },\n  afterCalculateTickRotation: function afterCalculateTickRotation() {\n    helpers.callback(this.options.afterCalculateTickRotation, [this]);\n  },\n  //\n  beforeFit: function beforeFit() {\n    helpers.callback(this.options.beforeFit, [this]);\n  },\n  fit: function fit() {\n    var me = this; // Reset\n\n    var minSize = me.minSize = {\n      width: 0,\n      height: 0\n    };\n    var labels = labelsFromTicks(me._ticks);\n    var opts = me.options;\n    var tickOpts = opts.ticks;\n    var scaleLabelOpts = opts.scaleLabel;\n    var gridLineOpts = opts.gridLines;\n    var display = opts.display;\n    var isHorizontal = me.isHorizontal();\n    var tickFont = parseFontOptions(tickOpts);\n    var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n    if (isHorizontal) {\n      // subtract the margins to line up with the chartArea if we are a full width scale\n      minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n    } else {\n      minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } // height\n\n\n    if (isHorizontal) {\n      minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } else {\n      minSize.height = me.maxHeight; // fill all the height\n    } // Are we showing a title for the scale?\n\n\n    if (scaleLabelOpts.display && display) {\n      var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n      var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n      if (isHorizontal) {\n        minSize.height += deltaHeight;\n      } else {\n        minSize.width += deltaHeight;\n      }\n    } // Don't bother fitting the ticks if we are not showing them\n\n\n    if (tickOpts.display && display) {\n      var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n      var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n      var lineSpace = tickFont.size * 0.5;\n      var tickPadding = me.options.ticks.padding;\n\n      if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n        me.longestLabelWidth = largestTextWidth;\n        var angleRadians = helpers.toRadians(me.labelRotation);\n        var cosRotation = Math.cos(angleRadians);\n        var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n        var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n        minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        me.ctx.font = tickFont.font;\n        var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n        var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n        // which means that the right padding is dominated by the font height\n\n        if (me.labelRotation !== 0) {\n          me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n        } else {\n          me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = lastLabelWidth / 2 + 3;\n        }\n      } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n        if (tickOpts.mirror) {\n          largestTextWidth = 0;\n        } else {\n          // use lineSpace for consistency with horizontal axis\n          // tickPadding is not implemented for horizontal\n          largestTextWidth += tickPadding + lineSpace;\n        }\n\n        minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n        me.paddingTop = tickFont.size / 2;\n        me.paddingBottom = tickFont.size / 2;\n      }\n    }\n\n    me.handleMargins();\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n\n  /**\n   * Handle margins and padding interactions\n   * @private\n   */\n  handleMargins: function handleMargins() {\n    var me = this;\n\n    if (me.margins) {\n      me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n      me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n      me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n      me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n    }\n  },\n  afterFit: function afterFit() {\n    helpers.callback(this.options.afterFit, [this]);\n  },\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  isFullWidth: function isFullWidth() {\n    return this.options.fullWidth;\n  },\n  // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n  getRightValue: function getRightValue(rawValue) {\n    // Null and undefined values first\n    if (helpers.isNullOrUndef(rawValue)) {\n      return NaN;\n    } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n    if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n      return NaN;\n    } // If it is in fact an object, dive in one more level\n\n\n    if (rawValue) {\n      if (this.isHorizontal()) {\n        if (rawValue.x !== undefined) {\n          return this.getRightValue(rawValue.x);\n        }\n      } else if (rawValue.y !== undefined) {\n        return this.getRightValue(rawValue.y);\n      }\n    } // Value is good, return it\n\n\n    return rawValue;\n  },\n\n  /**\n   * Used to get the value to display in the tooltip for the data at the given index\n   * @param index\n   * @param datasetIndex\n   */\n  getLabelForIndex: helpers.noop,\n\n  /**\n   * Returns the location of the given data point. Value can either be an index or a numerical value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param value\n   * @param index\n   * @param datasetIndex\n   */\n  getPixelForValue: helpers.noop,\n\n  /**\n   * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param pixel\n   */\n  getValueForPixel: helpers.noop,\n\n  /**\n   * Returns the location of the tick at the given index\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForTick: function getPixelForTick(index) {\n    var me = this;\n    var offset = me.options.offset;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var pixel = tickWidth * index + me.paddingLeft;\n\n      if (offset) {\n        pixel += tickWidth / 2;\n      }\n\n      var finalVal = me.left + Math.round(pixel);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n    return me.top + index * (innerHeight / (me._ticks.length - 1));\n  },\n\n  /**\n   * Utility for getting the pixel location of a percentage of scale\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForDecimal: function getPixelForDecimal(decimal) {\n    var me = this;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var valueOffset = innerWidth * decimal + me.paddingLeft;\n      var finalVal = me.left + Math.round(valueOffset);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    return me.top + decimal * me.height;\n  },\n\n  /**\n   * Returns the pixel for the minimum chart value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getBasePixel: function getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  },\n  getBaseValue: function getBaseValue() {\n    var me = this;\n    var min = me.min;\n    var max = me.max;\n    return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  },\n\n  /**\n   * Returns a subset of ticks to be plotted to avoid overlapping labels.\n   * @private\n   */\n  _autoSkip: function _autoSkip(ticks) {\n    var skipRatio;\n    var me = this;\n    var isHorizontal = me.isHorizontal();\n    var optionTicks = me.options.ticks.minor;\n    var tickCount = ticks.length;\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var cosRotation = Math.cos(labelRotationRadians);\n    var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n    var result = [];\n    var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n    var maxTicks;\n\n    if (optionTicks.maxTicksLimit) {\n      maxTicks = optionTicks.maxTicksLimit;\n    }\n\n    if (isHorizontal) {\n      skipRatio = false;\n\n      if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n        skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (maxTicks && tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n      }\n    }\n\n    for (i = 0; i < tickCount; i++) {\n      tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n      shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n      if (shouldSkip && i !== tickCount - 1) {\n        // leave tick in place but make sure it's not displayed (#4635)\n        delete tick.label;\n      }\n\n      result.push(tick);\n    }\n\n    return result;\n  },\n  // Actually draw the scale on the canvas\n  // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n  draw: function draw(chartArea) {\n    var me = this;\n    var options = me.options;\n\n    if (!options.display) {\n      return;\n    }\n\n    var context = me.ctx;\n    var globalDefaults = defaults.global;\n    var optionTicks = options.ticks.minor;\n    var optionMajorTicks = options.ticks.major || optionTicks;\n    var gridLines = options.gridLines;\n    var scaleLabel = options.scaleLabel;\n    var isRotated = me.labelRotation !== 0;\n    var isHorizontal = me.isHorizontal();\n    var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n    var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n    var tickFont = parseFontOptions(optionTicks);\n    var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n    var majorTickFont = parseFontOptions(optionMajorTicks);\n    var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n    var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n    var scaleLabelFont = parseFontOptions(scaleLabel);\n    var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var itemsToDraw = [];\n    var axisWidth = me.options.gridLines.lineWidth;\n    var xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n    var xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n    var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n    var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n    helpers.each(ticks, function (tick, index) {\n      // autoskipper skipped this tick (#4635)\n      if (helpers.isNullOrUndef(tick.label)) {\n        return;\n      }\n\n      var label = tick.label;\n      var lineWidth, lineColor, borderDash, borderDashOffset;\n\n      if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n        // Draw the first index specially\n        lineWidth = gridLines.zeroLineWidth;\n        lineColor = gridLines.zeroLineColor;\n        borderDash = gridLines.zeroLineBorderDash;\n        borderDashOffset = gridLines.zeroLineBorderDashOffset;\n      } else {\n        lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n        lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n        borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n        borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n      } // Common properties\n\n\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n      var textAlign = 'middle';\n      var textBaseline = 'middle';\n      var tickPadding = optionTicks.padding;\n\n      if (isHorizontal) {\n        var labelYOffset = tl + tickPadding;\n\n        if (options.position === 'bottom') {\n          // bottom\n          textBaseline = !isRotated ? 'top' : 'middle';\n          textAlign = !isRotated ? 'center' : 'right';\n          labelY = me.top + labelYOffset;\n        } else {\n          // top\n          textBaseline = !isRotated ? 'bottom' : 'middle';\n          textAlign = !isRotated ? 'center' : 'left';\n          labelY = me.bottom - labelYOffset;\n        }\n\n        var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (xLineValue < me.left) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        xLineValue += helpers.aliasPixel(lineWidth);\n        labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n        tx1 = tx2 = x1 = x2 = xLineValue;\n        ty1 = yTickStart;\n        ty2 = yTickEnd;\n        y1 = chartArea.top;\n        y2 = chartArea.bottom + axisWidth;\n      } else {\n        var isLeft = options.position === 'left';\n        var labelXOffset;\n\n        if (optionTicks.mirror) {\n          textAlign = isLeft ? 'left' : 'right';\n          labelXOffset = tickPadding;\n        } else {\n          textAlign = isLeft ? 'right' : 'left';\n          labelXOffset = tl + tickPadding;\n        }\n\n        labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n        var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (yLineValue < me.top) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        yLineValue += helpers.aliasPixel(lineWidth);\n        labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n        tx1 = xTickStart;\n        tx2 = xTickEnd;\n        x1 = chartArea.left;\n        x2 = chartArea.right + axisWidth;\n        ty1 = ty2 = y1 = y2 = yLineValue;\n      }\n\n      itemsToDraw.push({\n        tx1: tx1,\n        ty1: ty1,\n        tx2: tx2,\n        ty2: ty2,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        labelX: labelX,\n        labelY: labelY,\n        glWidth: lineWidth,\n        glColor: lineColor,\n        glBorderDash: borderDash,\n        glBorderDashOffset: borderDashOffset,\n        rotation: -1 * labelRotationRadians,\n        label: label,\n        major: tick.major,\n        textBaseline: textBaseline,\n        textAlign: textAlign\n      });\n    }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n    helpers.each(itemsToDraw, function (itemToDraw) {\n      if (gridLines.display) {\n        context.save();\n        context.lineWidth = itemToDraw.glWidth;\n        context.strokeStyle = itemToDraw.glColor;\n\n        if (context.setLineDash) {\n          context.setLineDash(itemToDraw.glBorderDash);\n          context.lineDashOffset = itemToDraw.glBorderDashOffset;\n        }\n\n        context.beginPath();\n\n        if (gridLines.drawTicks) {\n          context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n          context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n        }\n\n        if (gridLines.drawOnChartArea) {\n          context.moveTo(itemToDraw.x1, itemToDraw.y1);\n          context.lineTo(itemToDraw.x2, itemToDraw.y2);\n        }\n\n        context.stroke();\n        context.restore();\n      }\n\n      if (optionTicks.display) {\n        // Make sure we draw text in the correct color and font\n        context.save();\n        context.translate(itemToDraw.labelX, itemToDraw.labelY);\n        context.rotate(itemToDraw.rotation);\n        context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n        context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n        context.textBaseline = itemToDraw.textBaseline;\n        context.textAlign = itemToDraw.textAlign;\n        var label = itemToDraw.label;\n\n        if (helpers.isArray(label)) {\n          var lineCount = label.length;\n          var lineHeight = tickFont.size * 1.5;\n          var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n          for (var i = 0; i < lineCount; ++i) {\n            // We just make sure the multiline element is a string here..\n            context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n            y += lineHeight;\n          }\n        } else {\n          context.fillText(label, 0, 0);\n        }\n\n        context.restore();\n      }\n    });\n\n    if (scaleLabel.display) {\n      // Draw the scale label\n      var scaleLabelX;\n      var scaleLabelY;\n      var rotation = 0;\n      var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n      if (isHorizontal) {\n        scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n        scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n      } else {\n        var isLeft = options.position === 'left';\n        scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n        scaleLabelY = me.top + (me.bottom - me.top) / 2;\n        rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n      }\n\n      context.save();\n      context.translate(scaleLabelX, scaleLabelY);\n      context.rotate(rotation);\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n      context.font = scaleLabelFont.font;\n      context.fillText(scaleLabel.labelString, 0, 0);\n      context.restore();\n    }\n\n    if (gridLines.drawBorder) {\n      // Draw the line at the edge of the axis\n      context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n      context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n      var x1 = me.left;\n      var x2 = me.right + axisWidth;\n      var y1 = me.top;\n      var y2 = me.bottom + axisWidth;\n      var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n      if (isHorizontal) {\n        y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n        y1 += aliasPixel;\n        y2 += aliasPixel;\n      } else {\n        x1 = x2 = options.position === 'left' ? me.right : me.left;\n        x1 += aliasPixel;\n        x2 += aliasPixel;\n      }\n\n      context.beginPath();\n      context.moveTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.stroke();\n    }\n  }\n});","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n        if (maxTick < 1e-4) {\n          // all ticks are small numbers; use scientific notation\n          var logTick = helpers.log10(Math.abs(tickValue));\n          tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n        } else {\n          var numDecimal = -1 * Math.floor(logDelta);\n          numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n          tickString = tickValue.toFixed(numDecimal);\n        }\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-in plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (typeof obj === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n  chart: null,\n  // the animation associated chart instance\n  currentStep: 0,\n  // the current animation step\n  numSteps: 60,\n  // default number of steps\n  easing: '',\n  // the easing to use for this animation\n  render: null,\n  // render function used by the animation service\n  onAnimationProgress: null,\n  // user specified callback to fire on each step of the animation\n  onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n}); // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'animationObject', {\n  get: function get() {\n    return this;\n  }\n});\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'chartInstance', {\n  get: function get() {\n    return this.chart;\n  },\n  set: function set(value) {\n    this.chart = value;\n  }\n});","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = {\n  frameDuration: 17,\n  animations: [],\n  dropFrames: 0,\n  request: null,\n\n  /**\n   * @param {Chart} chart - The chart to animate.\n   * @param {Chart.Animation} animation - The animation that we will animate.\n   * @param {Number} duration - The animation duration in ms.\n   * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n   */\n  addAnimation: function addAnimation(chart, animation, duration, lazy) {\n    var animations = this.animations;\n    var i, ilen;\n    animation.chart = chart;\n\n    if (!lazy) {\n      chart.animating = true;\n    }\n\n    for (i = 0, ilen = animations.length; i < ilen; ++i) {\n      if (animations[i].chart === chart) {\n        animations[i] = animation;\n        return;\n      }\n    }\n\n    animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n    if (animations.length === 1) {\n      this.requestAnimationFrame();\n    }\n  },\n  cancelAnimation: function cancelAnimation(chart) {\n    var index = helpers.findIndex(this.animations, function (animation) {\n      return animation.chart === chart;\n    });\n\n    if (index !== -1) {\n      this.animations.splice(index, 1);\n      chart.animating = false;\n    }\n  },\n  requestAnimationFrame: function requestAnimationFrame() {\n    var me = this;\n\n    if (me.request === null) {\n      // Skip animation frame requests until the active one is executed.\n      // This can happen when processing mouse events, e.g. 'mousemove'\n      // and 'mouseout' events will trigger multiple renders.\n      me.request = helpers.requestAnimFrame.call(window, function () {\n        me.request = null;\n        me.startDigest();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  startDigest: function startDigest() {\n    var me = this;\n    var startTime = Date.now();\n    var framesToDrop = 0;\n\n    if (me.dropFrames > 1) {\n      framesToDrop = Math.floor(me.dropFrames);\n      me.dropFrames = me.dropFrames % 1;\n    }\n\n    me.advance(1 + framesToDrop);\n    var endTime = Date.now();\n    me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n    if (me.animations.length > 0) {\n      me.requestAnimationFrame();\n    }\n  },\n\n  /**\n   * @private\n   */\n  advance: function advance(count) {\n    var animations = this.animations;\n    var animation, chart;\n    var i = 0;\n\n    while (i < animations.length) {\n      animation = animations[i];\n      chart = animation.chart;\n      animation.currentStep = (animation.currentStep || 0) + count;\n      animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n      helpers.callback(animation.render, [chart, animation], chart);\n      helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n      if (animation.currentStep >= animation.numSteps) {\n        helpers.callback(animation.onAnimationComplete, [animation], chart);\n        chart.animating = false;\n        animations.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nvar positioners = {\n  /**\n   * Average mode places the tooltip at the average position of the elements shown\n   * @function Chart.Tooltip.positioners.average\n   * @param elements {ChartElement[]} the elements being displayed in the tooltip\n   * @returns {Point} tooltip position\n   */\n  average: function average(elements) {\n    if (!elements.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: Math.round(x / count),\n      y: Math.round(y / count)\n    };\n  },\n\n  /**\n   * Gets the tooltip position nearest of the item nearest to the event position\n   * @function Chart.Tooltip.positioners.nearest\n   * @param elements {Chart.Element[]} the tooltip elements\n   * @param eventPosition {Point} the position of the event in canvas coordinates\n   * @returns {Point} the tooltip position\n   */\n  nearest: function nearest(elements, eventPosition) {\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n/**\n * Helper method to merge the opacity into a color\n */\n\nfunction mergeOpacity(colorString, opacity) {\n  var color = helpers.color(colorString);\n  return color.alpha(opacity * color.alpha()).rgbaString();\n} // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (helpers.isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\n\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n} // Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\n\n\nfunction createTooltipItem(element) {\n  var xScale = element._xScale;\n  var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n  var index = element._index;\n  var datasetIndex = element._datasetIndex;\n  return {\n    xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n    yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n    index: index,\n    datasetIndex: datasetIndex,\n    x: element._model.x,\n    y: element._model.y\n  };\n}\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\n\n\nfunction getBaseModel(tooltipOpts) {\n  var globalDefaults = defaults.global;\n  var valueOrDefault = helpers.valueOrDefault;\n  return {\n    // Positioning\n    xPadding: tooltipOpts.xPadding,\n    yPadding: tooltipOpts.yPadding,\n    xAlign: tooltipOpts.xAlign,\n    yAlign: tooltipOpts.yAlign,\n    // Body\n    bodyFontColor: tooltipOpts.bodyFontColor,\n    _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n    _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n    _bodyAlign: tooltipOpts.bodyAlign,\n    bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n    bodySpacing: tooltipOpts.bodySpacing,\n    // Title\n    titleFontColor: tooltipOpts.titleFontColor,\n    _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n    _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n    titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n    _titleAlign: tooltipOpts.titleAlign,\n    titleSpacing: tooltipOpts.titleSpacing,\n    titleMarginBottom: tooltipOpts.titleMarginBottom,\n    // Footer\n    footerFontColor: tooltipOpts.footerFontColor,\n    _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n    _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n    footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n    _footerAlign: tooltipOpts.footerAlign,\n    footerSpacing: tooltipOpts.footerSpacing,\n    footerMarginTop: tooltipOpts.footerMarginTop,\n    // Appearance\n    caretSize: tooltipOpts.caretSize,\n    cornerRadius: tooltipOpts.cornerRadius,\n    backgroundColor: tooltipOpts.backgroundColor,\n    opacity: 0,\n    legendColorBackground: tooltipOpts.multiKeyBackground,\n    displayColors: tooltipOpts.displayColors,\n    borderColor: tooltipOpts.borderColor,\n    borderWidth: tooltipOpts.borderWidth\n  };\n}\n/**\n * Get the size of the tooltip\n */\n\n\nfunction getTooltipSize(tooltip, model) {\n  var ctx = tooltip._chart.ctx;\n  var height = model.yPadding * 2; // Tooltip Padding\n\n  var width = 0; // Count of all lines in the body\n\n  var body = model.body;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n  var titleLineCount = model.title.length;\n  var footerLineCount = model.footer.length;\n  var titleFontSize = model.titleFontSize;\n  var bodyFontSize = model.bodyFontSize;\n  var footerFontSize = model.footerFontSize;\n  height += titleLineCount * titleFontSize; // Title Lines\n\n  height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n  height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n  height += combinedBodyLength * bodyFontSize; // Body Lines\n\n  height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n  height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n  height += footerLineCount * footerFontSize; // Footer Lines\n\n  height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n  // Title width\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n  helpers.each(model.title, maxLineWidth); // Body width\n\n  ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n  helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n  widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n  helpers.each(body, function (bodyItem) {\n    helpers.each(bodyItem.before, maxLineWidth);\n    helpers.each(bodyItem.lines, maxLineWidth);\n    helpers.each(bodyItem.after, maxLineWidth);\n  }); // Reset back to 0\n\n  widthPadding = 0; // Footer width\n\n  ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n  helpers.each(model.footer, maxLineWidth); // Add padding\n\n  width += 2 * model.xPadding;\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Helper to get the alignment of a tooltip given the size\n */\n\n\nfunction determineAlignment(tooltip, size) {\n  var model = tooltip._model;\n  var chart = tooltip._chart;\n  var chartArea = tooltip._chart.chartArea;\n  var xAlign = 'center';\n  var yAlign = 'center';\n\n  if (model.y < size.height) {\n    yAlign = 'top';\n  } else if (model.y > chart.height - size.height) {\n    yAlign = 'bottom';\n  }\n\n  var lf, rf; // functions to determine left, right alignment\n\n  var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n  var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n  var midX = (chartArea.left + chartArea.right) / 2;\n  var midY = (chartArea.top + chartArea.bottom) / 2;\n\n  if (yAlign === 'center') {\n    lf = function lf(x) {\n      return x <= midX;\n    };\n\n    rf = function rf(x) {\n      return x > midX;\n    };\n  } else {\n    lf = function lf(x) {\n      return x <= size.width / 2;\n    };\n\n    rf = function rf(x) {\n      return x >= chart.width - size.width / 2;\n    };\n  }\n\n  olf = function olf(x) {\n    return x + size.width + model.caretSize + model.caretPadding > chart.width;\n  };\n\n  orf = function orf(x) {\n    return x - size.width - model.caretSize - model.caretPadding < 0;\n  };\n\n  yf = function yf(y) {\n    return y <= midY ? 'top' : 'bottom';\n  };\n\n  if (lf(model.x)) {\n    xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n    if (olf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  } else if (rf(model.x)) {\n    xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n    if (orf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  }\n\n  var opts = tooltip._options;\n  return {\n    xAlign: opts.xAlign ? opts.xAlign : xAlign,\n    yAlign: opts.yAlign ? opts.yAlign : yAlign\n  };\n}\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\n\n\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n  // Background Position\n  var x = vm.x;\n  var y = vm.y;\n  var caretSize = vm.caretSize;\n  var caretPadding = vm.caretPadding;\n  var cornerRadius = vm.cornerRadius;\n  var xAlign = alignment.xAlign;\n  var yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n\n  if (xAlign === 'right') {\n    x -= size.width;\n  } else if (xAlign === 'center') {\n    x -= size.width / 2;\n\n    if (x + size.width > chart.width) {\n      x = chart.width - size.width;\n    }\n\n    if (x < 0) {\n      x = 0;\n    }\n  }\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= size.height + paddingAndSize;\n  } else {\n    y -= size.height / 2;\n  }\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n/**\n * Helper to build before and after body lines\n */\n\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n  initialize: function initialize() {\n    this._model = getBaseModel(this._options);\n    this._lastActive = [];\n  },\n  // Get the title\n  // Args are: (tooltipItem, data)\n  getTitle: function getTitle() {\n    var me = this;\n    var opts = me._options;\n    var callbacks = opts.callbacks;\n    var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n    var title = callbacks.title.apply(me, arguments);\n    var afterTitle = callbacks.afterTitle.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  },\n  // Args are: (tooltipItem, data)\n  getBeforeBody: function getBeforeBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n  },\n  // Args are: (tooltipItem, data)\n  getBody: function getBody(tooltipItems, data) {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var bodyItems = [];\n    helpers.each(tooltipItems, function (tooltipItem) {\n      var bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n      pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n      pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  },\n  // Args are: (tooltipItem, data)\n  getAfterBody: function getAfterBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n  },\n  // Get the footer and beforeFooter and afterFooter lines\n  // Args are: (tooltipItem, data)\n  getFooter: function getFooter() {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n    var footer = callbacks.footer.apply(me, arguments);\n    var afterFooter = callbacks.afterFooter.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  },\n  update: function update(changed) {\n    var me = this;\n    var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n    // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n    // which breaks any animations.\n\n    var existingModel = me._model;\n    var model = me._model = getBaseModel(opts);\n    var active = me._active;\n    var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n    var alignment = {\n      xAlign: existingModel.xAlign,\n      yAlign: existingModel.yAlign\n    };\n    var backgroundPoint = {\n      x: existingModel.x,\n      y: existingModel.y\n    };\n    var tooltipSize = {\n      width: existingModel.width,\n      height: existingModel.height\n    };\n    var tooltipPosition = {\n      x: existingModel.caretX,\n      y: existingModel.caretY\n    };\n    var i, len;\n\n    if (active.length) {\n      model.opacity = 1;\n      var labelColors = [];\n      var labelTextColors = [];\n      tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n      var tooltipItems = [];\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(active[i]));\n      } // If the user provided a filter function, use it to modify the tooltip items\n\n\n      if (opts.filter) {\n        tooltipItems = tooltipItems.filter(function (a) {\n          return opts.filter(a, data);\n        });\n      } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n      if (opts.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return opts.itemSort(a, b, data);\n        });\n      } // Determine colors for boxes\n\n\n      helpers.each(tooltipItems, function (tooltipItem) {\n        labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n        labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n      }); // Build the Text Lines\n\n      model.title = me.getTitle(tooltipItems, data);\n      model.beforeBody = me.getBeforeBody(tooltipItems, data);\n      model.body = me.getBody(tooltipItems, data);\n      model.afterBody = me.getAfterBody(tooltipItems, data);\n      model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n      model.x = Math.round(tooltipPosition.x);\n      model.y = Math.round(tooltipPosition.y);\n      model.caretPadding = opts.caretPadding;\n      model.labelColors = labelColors;\n      model.labelTextColors = labelTextColors; // data points\n\n      model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n      tooltipSize = getTooltipSize(this, model);\n      alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n      backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n    } else {\n      model.opacity = 0;\n    }\n\n    model.xAlign = alignment.xAlign;\n    model.yAlign = alignment.yAlign;\n    model.x = backgroundPoint.x;\n    model.y = backgroundPoint.y;\n    model.width = tooltipSize.width;\n    model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n    model.caretX = tooltipPosition.x;\n    model.caretY = tooltipPosition.y;\n    me._model = model;\n\n    if (changed && opts.custom) {\n      opts.custom.call(me, model);\n    }\n\n    return me;\n  },\n  drawCaret: function drawCaret(tooltipPoint, size) {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  },\n  getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n    var x1, x2, x3, y1, y2, y3;\n    var caretSize = vm.caretSize;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var ptX = tooltipPoint.x;\n    var ptY = tooltipPoint.y;\n    var width = size.width;\n    var height = size.height;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        x3 = x1;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        x3 = x1;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        x2 = vm.caretX;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        y3 = y1;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        y3 = y1; // invert drawing order\n\n        var tmp = x3;\n        x3 = x1;\n        x1 = tmp;\n      }\n    }\n\n    return {\n      x1: x1,\n      x2: x2,\n      x3: x3,\n      y1: y1,\n      y2: y2,\n      y3: y3\n    };\n  },\n  drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n    var title = vm.title;\n\n    if (title.length) {\n      ctx.textAlign = vm._titleAlign;\n      ctx.textBaseline = 'top';\n      var titleFontSize = vm.titleFontSize;\n      var titleSpacing = vm.titleSpacing;\n      ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n      ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n      var i, len;\n\n      for (i = 0, len = title.length; i < len; ++i) {\n        ctx.fillText(title[i], pt.x, pt.y);\n        pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === title.length) {\n          pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  },\n  drawBody: function drawBody(pt, vm, ctx, opacity) {\n    var bodyFontSize = vm.bodyFontSize;\n    var bodySpacing = vm.bodySpacing;\n    var body = vm.body;\n    ctx.textAlign = vm._bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n    var xLinePadding = 0;\n\n    var fillLineOfText = function fillLineOfText(line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    }; // Before body lines\n\n\n    ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n    helpers.each(vm.beforeBody, fillLineOfText);\n    var drawColorBoxes = vm.displayColors;\n    xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n    helpers.each(body, function (bodyItem, i) {\n      var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText);\n      helpers.each(bodyItem.lines, function (line) {\n        // Draw Legend-like boxes if needed\n        if (drawColorBoxes) {\n          // Fill a white rect so that colours merge nicely if the opacity is < 1\n          ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n          ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n          ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n          ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n          ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n          ctx.fillStyle = textColor;\n        }\n\n        fillLineOfText(line);\n      });\n      helpers.each(bodyItem.after, fillLineOfText);\n    }); // Reset back to 0 for after body\n\n    xLinePadding = 0; // After body lines\n\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  },\n  drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n    var footer = vm.footer;\n\n    if (footer.length) {\n      pt.y += vm.footerMarginTop;\n      ctx.textAlign = vm._footerAlign;\n      ctx.textBaseline = 'top';\n      ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n      ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n      helpers.each(footer, function (line) {\n        ctx.fillText(line, pt.x, pt.y);\n        pt.y += vm.footerFontSize + vm.footerSpacing;\n      });\n    }\n  },\n  drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n    ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n    ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n    ctx.lineWidth = vm.borderWidth;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var x = pt.x;\n    var y = pt.y;\n    var width = tooltipSize.width;\n    var height = tooltipSize.height;\n    var radius = vm.cornerRadius;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (vm.borderWidth > 0) {\n      ctx.stroke();\n    }\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n\n    if (vm.opacity === 0) {\n      return;\n    }\n\n    var tooltipSize = {\n      width: vm.width,\n      height: vm.height\n    };\n    var pt = {\n      x: vm.x,\n      y: vm.y\n    }; // IE11/Edge does not like very small opacities, so snap to 0\n\n    var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n    var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n    if (this._options.enabled && hasTooltipContent) {\n      // Draw Background\n      this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n      pt.x += vm.xPadding;\n      pt.y += vm.yPadding; // Titles\n\n      this.drawTitle(pt, vm, ctx, opacity); // Body\n\n      this.drawBody(pt, vm, ctx, opacity); // Footer\n\n      this.drawFooter(pt, vm, ctx, opacity);\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @returns {Boolean} true if the tooltip changed\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var options = me._options;\n    var changed = false;\n    me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n    if (e.type === 'mouseout') {\n      me._active = [];\n    } else {\n      me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n    } // Remember Last Actives\n\n\n    changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n    if (changed) {\n      me._lastActive = me._active;\n\n      if (options.enabled || options.custom) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true);\n        me.pivot();\n      }\n    }\n\n    return changed;\n  }\n});\n/**\n * @namespace Chart.Tooltip.positioners\n */\n\nexports.positioners = positioners;","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      // NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n      // on Chrome when `r` is exactly half the height or the width.\n      var epsilon = 0.0000001;\n      var r = Math.min(radius, height / 2 - epsilon, width / 2 - epsilon);\n      ctx.moveTo(x + r, y);\n      ctx.lineTo(x + width - r, y);\n      ctx.arcTo(x + width, y, x + width, y + r, r);\n      ctx.lineTo(x + width, y + height - r);\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n      ctx.lineTo(x + r, y + height);\n      ctx.arcTo(x, y + height, x, y + height - r, r);\n      ctx.lineTo(x, y + r);\n      ctx.arcTo(x, y, x + r, y, r);\n      ctx.closePath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n    rotation = rotation || 0;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotation * Math.PI / 180);\n    ctx.beginPath();\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.arc(0, 0, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        break;\n\n      case 'triangle':\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(-edgeLength / 2, height / 3);\n        ctx.lineTo(edgeLength / 2, height / 3);\n        ctx.lineTo(0, -2 * height / 3);\n        ctx.closePath();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.rect(-size, -size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = -offset;\n        var topY = -offset;\n        var sideSize = Math.SQRT2 * radius; // NOTE(SB) the rounded rect implementation changed to use `arcTo`\n        // instead of `quadraticCurveTo` since it generates better results\n        // when rect is almost a circle. 0.425 (instead of 0.5) produces\n        // results visually closer to the previous impl.\n\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.moveTo(-size, 0);\n        ctx.lineTo(0, size);\n        ctx.lineTo(size, 0);\n        ctx.lineTo(0, -size);\n        ctx.closePath();\n        break;\n\n      case 'cross':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'crossRot':\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'star':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'line':\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'dash':\n        ctx.moveTo(0, 0);\n        ctx.lineTo(radius, 0);\n        break;\n    }\n\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.target || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n\n    var parentNode = helpers._getParentNode(domNode);\n\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n  /**\n   * @private\n  \t */\n\n\n  helpers._calculatePadding = function (container, padding, parentDimension) {\n    padding = helpers.getStyle(container, padding);\n    return padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n  };\n  /**\n   * @private\n   */\n\n\n  helpers._getParentNode = function (domNode) {\n    var parent = domNode.parentNode;\n\n    if (parent && parent.host) {\n      parent = parent.host;\n    }\n\n    return parent;\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var clientWidth = container.clientWidth;\n\n    var paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\n    var paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n    var w = clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var clientHeight = container.clientHeight;\n\n    var paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\n    var paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n    var h = clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var rotation = vm.rotation;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    if (vm.skip) {\n      return;\n    } // Clipping for Points.\n\n\n    if (chartArea === undefined || model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y) {\n      ctx.strokeStyle = vm.borderColor || defaultColor;\n      ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n      ctx.fillStyle = vm.backgroundColor || defaultColor;\n      helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","'use strict';\n\nvar Animation = require('./core.animation');\n\nvar animations = require('./core.animations');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: me.options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var factor;\n  var precision;\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n    precision = generationOptions.precision;\n\n    if (precision !== undefined) {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function () {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var elementOpts = this.chart.options.elements.arc;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    getPointRotation: function getPointRotation(point, index) {\n      var pointRotation = this.chart.options.elements.point.rotation;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.rotation)) {\n        pointRotation = custom.rotation;\n      } else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n        pointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n      }\n\n      return pointRotation;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        rotation: me.getPointRotation(point, index),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      // Point\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      var elementOpts = this.chart.options.elements.arc;\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = arc._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return helpers.options.resolve([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          rotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar NAN = 0 / 0;\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;"],"sourceRoot":""}